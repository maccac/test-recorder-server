buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "io.ratpack:ratpack-gradle:1.5.0"
    classpath 'org.jooq:jooq-codegen:3.8.1'
    classpath 'com.h2database:h2:1.4.186'
  }
}

apply plugin: "io.ratpack.ratpack-java"
apply plugin: "idea"

repositories {
  jcenter()
}

dependencies {
  compile ratpack.dependency("guice")
  compile ratpack.dependency("h2")
  compile ratpack.dependency("hikari")
  compile 'org.jooq:jooq:3.8.1'

  runtime "org.slf4j:slf4j-simple:1.7.25"
}

mainClassName = "info.maccac.recorder.service.Main"

import org.jooq.util.jaxb.*
import org.jooq.util.*

task jooqCodegen {
  doLast {
    String init = "$projectDir/src/main/resources/init.sql".replaceAll('\\\\', '/')
    Configuration configuration = new Configuration()
            .withJdbc(new Jdbc()
            .withDriver("org.h2.Driver")
            .withUrl("jdbc:h2:mem:todo;INIT=RUNSCRIPT FROM '$init'")
    )
            .withGenerator(new Generator()
            .withDatabase(new Database()
            .withName("org.jooq.util.h2.H2Database")
            .withIncludes(".*")
            .withExcludes("")
            .withInputSchema("PUBLIC")
    )
            .withTarget(new Target()
            .withDirectory("$projectDir/src/main/java")
            .withPackageName("jooq")))
    GenerationTool.generate(configuration)
  }
}
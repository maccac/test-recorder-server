/**
 * This class is generated by jOOQ
 */
package jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.Keys;
import jooq.Public;
import jooq.tables.records.IdetestresultsRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Idetestresults extends TableImpl<IdetestresultsRecord> {

    private static final long serialVersionUID = -1121993384;

    /**
     * The reference instance of <code>PUBLIC.IDETESTRESULTS</code>
     */
    public static final Idetestresults IDETESTRESULTS = new Idetestresults();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IdetestresultsRecord> getRecordType() {
        return IdetestresultsRecord.class;
    }

    /**
     * The column <code>PUBLIC.IDETESTRESULTS.ID</code>.
     */
    public final TableField<IdetestresultsRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_542B1C4D_5EE1_488B_9EBD_080C1E76B8B7)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>PUBLIC.IDETESTRESULTS.PROJECTNAME</code>.
     */
    public final TableField<IdetestresultsRecord, String> PROJECTNAME = createField("PROJECTNAME", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>PUBLIC.IDETESTRESULTS.TESTNAME</code>.
     */
    public final TableField<IdetestresultsRecord, String> TESTNAME = createField("TESTNAME", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>PUBLIC.IDETESTRESULTS.DURATION</code>.
     */
    public final TableField<IdetestresultsRecord, Long> DURATION = createField("DURATION", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>PUBLIC.IDETESTRESULTS</code> table reference
     */
    public Idetestresults() {
        this("IDETESTRESULTS", null);
    }

    /**
     * Create an aliased <code>PUBLIC.IDETESTRESULTS</code> table reference
     */
    public Idetestresults(String alias) {
        this(alias, IDETESTRESULTS);
    }

    private Idetestresults(String alias, Table<IdetestresultsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Idetestresults(String alias, Table<IdetestresultsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<IdetestresultsRecord, Long> getIdentity() {
        return Keys.IDENTITY_IDETESTRESULTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IdetestresultsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IdetestresultsRecord>> getKeys() {
        return Arrays.<UniqueKey<IdetestresultsRecord>>asList(Keys.CONSTRAINT_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Idetestresults as(String alias) {
        return new Idetestresults(alias, this);
    }

    /**
     * Rename this table
     */
    public Idetestresults rename(String name) {
        return new Idetestresults(name, null);
    }
}

/**
 * This class is generated by jOOQ
 */
package jooq.tables.records;


import javax.annotation.Generated;

import jooq.tables.Idetestresults;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdetestresultsRecord extends UpdatableRecordImpl<IdetestresultsRecord> implements Record4<Long, String, String, Long> {

    private static final long serialVersionUID = 954723545;

    /**
     * Setter for <code>PUBLIC.IDETESTRESULTS.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.IDETESTRESULTS.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.IDETESTRESULTS.PROJECTNAME</code>.
     */
    public void setProjectname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.IDETESTRESULTS.PROJECTNAME</code>.
     */
    public String getProjectname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.IDETESTRESULTS.TESTNAME</code>.
     */
    public void setTestname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.IDETESTRESULTS.TESTNAME</code>.
     */
    public String getTestname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.IDETESTRESULTS.DURATION</code>.
     */
    public void setDuration(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.IDETESTRESULTS.DURATION</code>.
     */
    public Long getDuration() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Idetestresults.IDETESTRESULTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Idetestresults.IDETESTRESULTS.PROJECTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Idetestresults.IDETESTRESULTS.TESTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Idetestresults.IDETESTRESULTS.DURATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getProjectname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTestname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getDuration();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdetestresultsRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdetestresultsRecord value2(String value) {
        setProjectname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdetestresultsRecord value3(String value) {
        setTestname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdetestresultsRecord value4(Long value) {
        setDuration(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdetestresultsRecord values(Long value1, String value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IdetestresultsRecord
     */
    public IdetestresultsRecord() {
        super(Idetestresults.IDETESTRESULTS);
    }

    /**
     * Create a detached, initialised IdetestresultsRecord
     */
    public IdetestresultsRecord(Long id, String projectname, String testname, Long duration) {
        super(Idetestresults.IDETESTRESULTS);

        set(0, id);
        set(1, projectname);
        set(2, testname);
        set(3, duration);
    }
}
